{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ReleaseCard from \"./ReleaseCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ReleasesGrid = function ReleasesGrid(_ref) {\n  var releases = _ref.releases,\n    label = _ref.label;\n  var filteredReleases = releases.filter(function (release) {\n    return release.label === label;\n  });\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.grid,\n      children: filteredReleases.map(function (release) {\n        return _jsx(View, {\n          style: styles.cardContainer,\n          children: _jsx(ReleaseCard, {\n            title: release.title,\n            artist: release.artist,\n            artwork: release.artwork,\n            releaseDate: release.releaseDate,\n            genre: release.genre,\n            beatportLink: release.beatportLink,\n            label: label\n          })\n        }, release.id);\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  grid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n    padding: 10,\n    alignItems: 'flex-start'\n  },\n  cardContainer: {\n    width: '33.33%',\n    padding: 10,\n    '@media (max-width: 768px)': {\n      width: '50%'\n    },\n    '@media (max-width: 480px)': {\n      width: '100%'\n    }\n  }\n});\nexport default ReleasesGrid;","map":{"version":3,"names":["React","View","StyleSheet","ScrollView","ReleaseCard","jsx","_jsx","ReleasesGrid","_ref","releases","label","filteredReleases","filter","release","style","styles","container","children","grid","map","cardContainer","title","artist","artwork","releaseDate","genre","beatportLink","id","create","flex","flexDirection","flexWrap","justifyContent","padding","alignItems","width"],"sources":["/Users/ajsorbello/Documents/MyWebPortfolio/builditrecords/src/components/ReleasesGrid.tsx"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet, ScrollView } from 'react-native';\nimport ReleaseCard from './ReleaseCard';\n\ninterface Release {\n  id: string;\n  title: string;\n  artist: string;\n  artwork: string;\n  releaseDate: string;\n  genre: string;\n  beatportLink?: string;\n  label: 'records' | 'tech' | 'deep';\n}\n\ninterface ReleasesGridProps {\n  releases: Release[];\n  label: 'records' | 'tech' | 'deep';\n}\n\nconst ReleasesGrid: React.FC<ReleasesGridProps> = ({ releases, label }) => {\n  const filteredReleases = releases.filter(release => release.label === label);\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.grid}>\n        {filteredReleases.map((release) => (\n          <View key={release.id} style={styles.cardContainer}>\n            <ReleaseCard\n              title={release.title}\n              artist={release.artist}\n              artwork={release.artwork}\n              releaseDate={release.releaseDate}\n              genre={release.genre}\n              beatportLink={release.beatportLink}\n              label={label}\n            />\n          </View>\n        ))}\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  grid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n    padding: 10,\n    alignItems: 'flex-start',\n  },\n  cardContainer: {\n    width: '33.33%', // 3 cards per row\n    padding: 10,\n    '@media (max-width: 768px)': {\n      width: '50%', // 2 cards per row on tablets\n    },\n    '@media (max-width: 480px)': {\n      width: '100%', // 1 card per row on mobile\n    },\n  },\n});\n\nexport default ReleasesGrid;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAE1B,OAAOC,WAAW;AAAsB,SAAAC,GAAA,IAAAC,IAAA;AAkBxC,IAAMC,YAAyC,GAAG,SAA5CA,YAAyCA,CAAAC,IAAA,EAA4B;EAAA,IAAtBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAClE,IAAMC,gBAAgB,GAAGF,QAAQ,CAACG,MAAM,CAAC,UAAAC,OAAO;IAAA,OAAIA,OAAO,CAACH,KAAK,KAAKA,KAAK;EAAA,EAAC;EAE5E,OACEJ,IAAA,CAACH,UAAU;IAACW,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAClCX,IAAA,CAACL,IAAI;MAACa,KAAK,EAAEC,MAAM,CAACG,IAAK;MAAAD,QAAA,EACtBN,gBAAgB,CAACQ,GAAG,CAAC,UAACN,OAAO;QAAA,OAC5BP,IAAA,CAACL,IAAI;UAAkBa,KAAK,EAAEC,MAAM,CAACK,aAAc;UAAAH,QAAA,EACjDX,IAAA,CAACF,WAAW;YACViB,KAAK,EAAER,OAAO,CAACQ,KAAM;YACrBC,MAAM,EAAET,OAAO,CAACS,MAAO;YACvBC,OAAO,EAAEV,OAAO,CAACU,OAAQ;YACzBC,WAAW,EAAEX,OAAO,CAACW,WAAY;YACjCC,KAAK,EAAEZ,OAAO,CAACY,KAAM;YACrBC,YAAY,EAAEb,OAAO,CAACa,YAAa;YACnChB,KAAK,EAAEA;UAAM,CACd;QAAC,GATOG,OAAO,CAACc,EAUb,CAAC;MAAA,CACR;IAAC,CACE;EAAC,CACG,CAAC;AAEjB,CAAC;AAED,IAAMZ,MAAM,GAAGb,UAAU,CAAC0B,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE;EACR,CAAC;EACDX,IAAI,EAAE;IACJY,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE,MAAM;IAChBC,cAAc,EAAE,YAAY;IAC5BC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACd,CAAC;EACDd,aAAa,EAAE;IACbe,KAAK,EAAE,QAAQ;IACfF,OAAO,EAAE,EAAE;IACX,2BAA2B,EAAE;MAC3BE,KAAK,EAAE;IACT,CAAC;IACD,2BAA2B,EAAE;MAC3BA,KAAK,EAAE;IACT;EACF;AACF,CAAC,CAAC;AAEF,eAAe5B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}