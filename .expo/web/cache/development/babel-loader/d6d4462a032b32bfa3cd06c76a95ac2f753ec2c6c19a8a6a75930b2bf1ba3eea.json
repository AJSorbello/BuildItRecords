{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport SpotifyService from \"../services/SpotifyService\";\nexport var useReleases = function useReleases(labelId) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    releases = _useState2[0],\n    setReleases = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    latestRelease = _useState4[0],\n    setLatestRelease = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  useEffect(function () {\n    var fetchReleases = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          setIsLoading(true);\n          setError(null);\n          var spotifyService = SpotifyService.getInstance();\n          var allReleases = yield spotifyService.getLabelReleases(labelId);\n          setReleases(allReleases);\n          setLatestRelease(allReleases.length > 0 ? allReleases[0] : null);\n        } catch (err) {\n          console.error('Error fetching releases:', err);\n          setError('Failed to load releases. Please try again later.');\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function fetchReleases() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchReleases();\n  }, [labelId]);\n  return {\n    releases: releases,\n    latestRelease: latestRelease,\n    isLoading: isLoading,\n    error: error,\n    refetch: function refetch() {\n      setIsLoading(true);\n      setError(null);\n      fetchReleases();\n    }\n  };\n};","map":{"version":3,"names":["useState","useEffect","SpotifyService","useReleases","labelId","_useState","_useState2","_slicedToArray","releases","setReleases","_useState3","_useState4","latestRelease","setLatestRelease","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","fetchReleases","_ref","_asyncToGenerator","spotifyService","getInstance","allReleases","getLabelReleases","length","err","console","apply","arguments","refetch"],"sources":["/Users/ajsorbello/Documents/MyWebPortfolio/builditrecords/src/hooks/useReleases.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport SpotifyService, { SpotifyRelease } from '../services/SpotifyService';\n\nexport const useReleases = (labelId: string) => {\n  const [releases, setReleases] = useState<SpotifyRelease[]>([]);\n  const [latestRelease, setLatestRelease] = useState<SpotifyRelease | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchReleases = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        \n        const spotifyService = SpotifyService.getInstance();\n        const allReleases = await spotifyService.getLabelReleases(labelId);\n        \n        setReleases(allReleases);\n        setLatestRelease(allReleases.length > 0 ? allReleases[0] : null);\n      } catch (err) {\n        console.error('Error fetching releases:', err);\n        setError('Failed to load releases. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReleases();\n  }, [labelId]);\n\n  return {\n    releases,\n    latestRelease,\n    isLoading,\n    error,\n    refetch: () => {\n      setIsLoading(true);\n      setError(null);\n      fetchReleases();\n    },\n  };\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,cAAc;AAErB,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,OAAe,EAAK;EAC9C,IAAAC,SAAA,GAAgCL,QAAQ,CAAmB,EAAE,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvDG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAA0CV,QAAQ,CAAwB,IAAI,CAAC;IAAAW,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAxEE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAAkCd,QAAQ,CAAC,IAAI,CAAC;IAAAe,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAA0BlB,QAAQ,CAAgB,IAAI,CAAC;IAAAmB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAhDE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtBlB,SAAS,CAAC,YAAM;IACd,IAAMqB,aAAa;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAChC,IAAI;UACFP,YAAY,CAAC,IAAI,CAAC;UAClBI,QAAQ,CAAC,IAAI,CAAC;UAEd,IAAMI,cAAc,GAAGvB,cAAc,CAACwB,WAAW,CAAC,CAAC;UACnD,IAAMC,WAAW,SAASF,cAAc,CAACG,gBAAgB,CAACxB,OAAO,CAAC;UAElEK,WAAW,CAACkB,WAAW,CAAC;UACxBd,gBAAgB,CAACc,WAAW,CAACE,MAAM,GAAG,CAAC,GAAGF,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAClE,CAAC,CAAC,OAAOG,GAAG,EAAE;UACZC,OAAO,CAACX,KAAK,CAAC,0BAA0B,EAAEU,GAAG,CAAC;UAC9CT,QAAQ,CAAC,kDAAkD,CAAC;QAC9D,CAAC,SAAS;UACRJ,YAAY,CAAC,KAAK,CAAC;QACrB;MACF,CAAC;MAAA,gBAhBKK,aAAaA,CAAA;QAAA,OAAAC,IAAA,CAAAS,KAAA,OAAAC,SAAA;MAAA;IAAA,GAgBlB;IAEDX,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAAClB,OAAO,CAAC,CAAC;EAEb,OAAO;IACLI,QAAQ,EAARA,QAAQ;IACRI,aAAa,EAAbA,aAAa;IACbI,SAAS,EAATA,SAAS;IACTI,KAAK,EAALA,KAAK;IACLc,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;MACbjB,YAAY,CAAC,IAAI,CAAC;MAClBI,QAAQ,CAAC,IAAI,CAAC;MACdC,aAAa,CAAC,CAAC;IACjB;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}