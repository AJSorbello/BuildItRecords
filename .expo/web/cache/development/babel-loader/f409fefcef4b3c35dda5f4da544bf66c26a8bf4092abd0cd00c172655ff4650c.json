{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ContactScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    message = _useState6[0],\n    setMessage = _useState6[1];\n  var handleSubmit = function handleSubmit() {\n    if (!name || !email || !message) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n    Alert.alert('Success', 'Thank you for your message. We will get back to you soon!', [{\n      text: 'OK',\n      onPress: function onPress() {\n        setName('');\n        setEmail('');\n        setMessage('');\n      }\n    }]);\n  };\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      style: styles.scrollView,\n      children: _jsxs(View, {\n        style: styles.content,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Contact Us\"\n        }), _jsx(Text, {\n          style: styles.subtitle,\n          children: \"Get in touch with us for booking and inquiries\"\n        }), _jsxs(View, {\n          style: styles.form,\n          children: [_jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.label,\n              children: \"Name\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: name,\n              onChangeText: setName,\n              placeholder: \"Your name\",\n              placeholderTextColor: \"#999\"\n            })]\n          }), _jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.label,\n              children: \"Email\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: email,\n              onChangeText: setEmail,\n              placeholder: \"Your email\",\n              placeholderTextColor: \"#999\",\n              keyboardType: \"email-address\",\n              autoCapitalize: \"none\"\n            })]\n          }), _jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.label,\n              children: \"Message\"\n            }), _jsx(TextInput, {\n              style: [styles.input, styles.messageInput],\n              value: message,\n              onChangeText: setMessage,\n              placeholder: \"Your message\",\n              placeholderTextColor: \"#999\",\n              multiline: true,\n              numberOfLines: 4,\n              textAlignVertical: \"top\"\n            })]\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: handleSubmit,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Send Message\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  scrollView: {\n    flex: 1\n  },\n  content: {\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#333'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 30\n  },\n  form: {\n    gap: 15\n  },\n  inputContainer: {\n    marginBottom: 15\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 5\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: '#333',\n    backgroundColor: '#fff'\n  },\n  messageInput: {\n    height: 120,\n    textAlignVertical: 'top'\n  },\n  button: {\n    backgroundColor: '#f4511e',\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","TextInput","TouchableOpacity","ScrollView","Alert","KeyboardAvoidingView","Platform","jsx","_jsx","jsxs","_jsxs","ContactScreen","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","message","setMessage","handleSubmit","alert","text","onPress","behavior","OS","style","styles","container","children","scrollView","content","title","subtitle","form","inputContainer","label","input","value","onChangeText","placeholder","placeholderTextColor","keyboardType","autoCapitalize","messageInput","multiline","numberOfLines","textAlignVertical","button","buttonText","create","flex","backgroundColor","padding","fontSize","fontWeight","marginBottom","color","gap","borderWidth","borderColor","borderRadius","height","alignItems","marginTop"],"sources":["/Users/ajsorbello/Documents/MyWebPortfolio/builditrecords/src/screens/ContactScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  StyleSheet, \n  View, \n  Text, \n  TextInput, \n  TouchableOpacity, \n  ScrollView,\n  Alert,\n  KeyboardAvoidingView,\n  Platform \n} from 'react-native';\n\nexport default function ContactScreen() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = () => {\n    if (!name || !email || !message) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n\n    // Here you would typically send this to your backend\n    Alert.alert(\n      'Success',\n      'Thank you for your message. We will get back to you soon!',\n      [\n        {\n          text: 'OK',\n          onPress: () => {\n            setName('');\n            setEmail('');\n            setMessage('');\n          },\n        },\n      ]\n    );\n  };\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      style={styles.container}\n    >\n      <ScrollView style={styles.scrollView}>\n        <View style={styles.content}>\n          <Text style={styles.title}>Contact Us</Text>\n          <Text style={styles.subtitle}>\n            Get in touch with us for booking and inquiries\n          </Text>\n\n          <View style={styles.form}>\n            <View style={styles.inputContainer}>\n              <Text style={styles.label}>Name</Text>\n              <TextInput\n                style={styles.input}\n                value={name}\n                onChangeText={setName}\n                placeholder=\"Your name\"\n                placeholderTextColor=\"#999\"\n              />\n            </View>\n\n            <View style={styles.inputContainer}>\n              <Text style={styles.label}>Email</Text>\n              <TextInput\n                style={styles.input}\n                value={email}\n                onChangeText={setEmail}\n                placeholder=\"Your email\"\n                placeholderTextColor=\"#999\"\n                keyboardType=\"email-address\"\n                autoCapitalize=\"none\"\n              />\n            </View>\n\n            <View style={styles.inputContainer}>\n              <Text style={styles.label}>Message</Text>\n              <TextInput\n                style={[styles.input, styles.messageInput]}\n                value={message}\n                onChangeText={setMessage}\n                placeholder=\"Your message\"\n                placeholderTextColor=\"#999\"\n                multiline\n                numberOfLines={4}\n                textAlignVertical=\"top\"\n              />\n            </View>\n\n            <TouchableOpacity\n              style={styles.button}\n              onPress={handleSubmit}\n            >\n              <Text style={styles.buttonText}>Send Message</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  scrollView: {\n    flex: 1,\n  },\n  content: {\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#333',\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 30,\n  },\n  form: {\n    gap: 15,\n  },\n  inputContainer: {\n    marginBottom: 15,\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 5,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: '#333',\n    backgroundColor: '#fff',\n  },\n  messageInput: {\n    height: 120,\n    textAlignVertical: 'top',\n  },\n  button: {\n    backgroundColor: '#f4511e',\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,oBAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAaxC,eAAe,SAASC,aAAaA,CAAA,EAAG;EACtC,IAAAC,SAAA,GAAwBf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,UAAA,GAA0BpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAA8BxB,QAAQ,CAAC,EAAE,CAAC;IAAAyB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAnCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1B,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAI,CAACV,IAAI,IAAI,CAACI,KAAK,IAAI,CAACI,OAAO,EAAE;MAC/BnB,KAAK,CAACsB,KAAK,CAAC,OAAO,EAAE,2BAA2B,CAAC;MACjD;IACF;IAGAtB,KAAK,CAACsB,KAAK,CACT,SAAS,EACT,2DAA2D,EAC3D,CACE;MACEC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;QACbZ,OAAO,CAAC,EAAE,CAAC;QACXI,QAAQ,CAAC,EAAE,CAAC;QACZI,UAAU,CAAC,EAAE,CAAC;MAChB;IACF,CAAC,CAEL,CAAC;EACH,CAAC;EAED,OACEhB,IAAA,CAACH,oBAAoB;IACnBwB,QAAQ,EAAEvB,QAAQ,CAACwB,EAAE,KAAK,KAAK,GAAG,SAAS,GAAG,QAAS;IACvDC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAExB1B,IAAA,CAACL,UAAU;MAAC4B,KAAK,EAAEC,MAAM,CAACG,UAAW;MAAAD,QAAA,EACnCxB,KAAA,CAACX,IAAI;QAACgC,KAAK,EAAEC,MAAM,CAACI,OAAQ;QAAAF,QAAA,GAC1B1B,IAAA,CAACR,IAAI;UAAC+B,KAAK,EAAEC,MAAM,CAACK,KAAM;UAAAH,QAAA,EAAC;QAAU,CAAM,CAAC,EAC5C1B,IAAA,CAACR,IAAI;UAAC+B,KAAK,EAAEC,MAAM,CAACM,QAAS;UAAAJ,QAAA,EAAC;QAE9B,CAAM,CAAC,EAEPxB,KAAA,CAACX,IAAI;UAACgC,KAAK,EAAEC,MAAM,CAACO,IAAK;UAAAL,QAAA,GACvBxB,KAAA,CAACX,IAAI;YAACgC,KAAK,EAAEC,MAAM,CAACQ,cAAe;YAAAN,QAAA,GACjC1B,IAAA,CAACR,IAAI;cAAC+B,KAAK,EAAEC,MAAM,CAACS,KAAM;cAAAP,QAAA,EAAC;YAAI,CAAM,CAAC,EACtC1B,IAAA,CAACP,SAAS;cACR8B,KAAK,EAAEC,MAAM,CAACU,KAAM;cACpBC,KAAK,EAAE5B,IAAK;cACZ6B,YAAY,EAAE5B,OAAQ;cACtB6B,WAAW,EAAC,WAAW;cACvBC,oBAAoB,EAAC;YAAM,CAC5B,CAAC;UAAA,CACE,CAAC,EAEPpC,KAAA,CAACX,IAAI;YAACgC,KAAK,EAAEC,MAAM,CAACQ,cAAe;YAAAN,QAAA,GACjC1B,IAAA,CAACR,IAAI;cAAC+B,KAAK,EAAEC,MAAM,CAACS,KAAM;cAAAP,QAAA,EAAC;YAAK,CAAM,CAAC,EACvC1B,IAAA,CAACP,SAAS;cACR8B,KAAK,EAAEC,MAAM,CAACU,KAAM;cACpBC,KAAK,EAAExB,KAAM;cACbyB,YAAY,EAAExB,QAAS;cACvByB,WAAW,EAAC,YAAY;cACxBC,oBAAoB,EAAC,MAAM;cAC3BC,YAAY,EAAC,eAAe;cAC5BC,cAAc,EAAC;YAAM,CACtB,CAAC;UAAA,CACE,CAAC,EAEPtC,KAAA,CAACX,IAAI;YAACgC,KAAK,EAAEC,MAAM,CAACQ,cAAe;YAAAN,QAAA,GACjC1B,IAAA,CAACR,IAAI;cAAC+B,KAAK,EAAEC,MAAM,CAACS,KAAM;cAAAP,QAAA,EAAC;YAAO,CAAM,CAAC,EACzC1B,IAAA,CAACP,SAAS;cACR8B,KAAK,EAAE,CAACC,MAAM,CAACU,KAAK,EAAEV,MAAM,CAACiB,YAAY,CAAE;cAC3CN,KAAK,EAAEpB,OAAQ;cACfqB,YAAY,EAAEpB,UAAW;cACzBqB,WAAW,EAAC,cAAc;cAC1BC,oBAAoB,EAAC,MAAM;cAC3BI,SAAS;cACTC,aAAa,EAAE,CAAE;cACjBC,iBAAiB,EAAC;YAAK,CACxB,CAAC;UAAA,CACE,CAAC,EAEP5C,IAAA,CAACN,gBAAgB;YACf6B,KAAK,EAAEC,MAAM,CAACqB,MAAO;YACrBzB,OAAO,EAAEH,YAAa;YAAAS,QAAA,EAEtB1B,IAAA,CAACR,IAAI;cAAC+B,KAAK,EAAEC,MAAM,CAACsB,UAAW;cAAApB,QAAA,EAAC;YAAY,CAAM;UAAC,CACnC,CAAC;QAAA,CACf,CAAC;MAAA,CACH;IAAC,CACG;EAAC,CACO,CAAC;AAE3B;AAEA,IAAMF,MAAM,GAAGlC,UAAU,CAACyD,MAAM,CAAC;EAC/BtB,SAAS,EAAE;IACTuB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDtB,UAAU,EAAE;IACVqB,IAAI,EAAE;EACR,CAAC;EACDpB,OAAO,EAAE;IACPsB,OAAO,EAAE;EACX,CAAC;EACDrB,KAAK,EAAE;IACLsB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE;EACT,CAAC;EACDxB,QAAQ,EAAE;IACRqB,QAAQ,EAAE,EAAE;IACZG,KAAK,EAAE,MAAM;IACbD,YAAY,EAAE;EAChB,CAAC;EACDtB,IAAI,EAAE;IACJwB,GAAG,EAAE;EACP,CAAC;EACDvB,cAAc,EAAE;IACdqB,YAAY,EAAE;EAChB,CAAC;EACDpB,KAAK,EAAE;IACLkB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBE,KAAK,EAAE,MAAM;IACbD,YAAY,EAAE;EAChB,CAAC;EACDnB,KAAK,EAAE;IACLsB,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfR,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZG,KAAK,EAAE,MAAM;IACbL,eAAe,EAAE;EACnB,CAAC;EACDR,YAAY,EAAE;IACZkB,MAAM,EAAE,GAAG;IACXf,iBAAiB,EAAE;EACrB,CAAC;EACDC,MAAM,EAAE;IACNI,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,EAAE;IACXQ,YAAY,EAAE,CAAC;IACfE,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE;EACb,CAAC;EACDf,UAAU,EAAE;IACVQ,KAAK,EAAE,MAAM;IACbH,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}