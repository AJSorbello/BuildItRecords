{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { StatusBar } from 'expo-status-bar';\nimport BuildItRecordsHome from \"./src/screens/BuildItRecords/HomeScreen\";\nimport BuildItTechHome from \"./src/screens/BuildItTech/HomeScreen\";\nimport BuildItDeepHome from \"./src/screens/BuildItDeep/HomeScreen\";\nimport AboutScreen from \"./src/screens/AboutScreen\";\nimport ContactScreen from \"./src/screens/ContactScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar LabelSelector = function LabelSelector(_ref) {\n  var currentLabel = _ref.currentLabel,\n    onSelectLabel = _ref.onSelectLabel;\n  return _jsxs(View, {\n    style: styles.labelSelector,\n    children: [_jsx(TouchableOpacity, {\n      style: [styles.labelButton, currentLabel === 'records' && styles.activeLabel],\n      onPress: function onPress() {\n        return onSelectLabel('records');\n      },\n      children: _jsx(Text, {\n        style: [styles.labelText, currentLabel === 'records' && styles.activeLabelText],\n        children: \"BUILD IT RECORDS\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: [styles.labelButton, currentLabel === 'tech' && styles.activeLabel],\n      onPress: function onPress() {\n        return onSelectLabel('tech');\n      },\n      children: _jsx(Text, {\n        style: [styles.labelText, currentLabel === 'tech' && styles.activeLabelText],\n        children: \"BUILD IT TECH\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: [styles.labelButton, currentLabel === 'deep' && styles.activeLabel],\n      onPress: function onPress() {\n        return onSelectLabel('deep');\n      },\n      children: _jsx(Text, {\n        style: [styles.labelText, currentLabel === 'deep' && styles.activeLabelText],\n        children: \"BUILD IT DEEP\"\n      })\n    })]\n  });\n};\nvar BuildItRecordsStack = function BuildItRecordsStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"BuildItRecordsHome\",\n      component: BuildItRecordsHome,\n      options: {\n        title: 'Build It Records'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"About\",\n      component: AboutScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Contact\",\n      component: ContactScreen\n    })]\n  });\n};\nvar BuildItTechStack = function BuildItTechStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"BuildItTechHome\",\n      component: BuildItTechHome,\n      options: {\n        title: 'Build It Tech'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"About\",\n      component: AboutScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Contact\",\n      component: ContactScreen\n    })]\n  });\n};\nvar BuildItDeepStack = function BuildItDeepStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"BuildItDeepHome\",\n      component: BuildItDeepHome,\n      options: {\n        title: 'Build It Deep'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"About\",\n      component: AboutScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Contact\",\n      component: ContactScreen\n    })]\n  });\n};\nexport default function App() {\n  var _useState = useState('records'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentLabel = _useState2[0],\n    setCurrentLabel = _useState2[1];\n  return _jsxs(NavigationContainer, {\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(LabelSelector, {\n        currentLabel: currentLabel,\n        onSelectLabel: setCurrentLabel\n      }), currentLabel === 'records' && _jsx(BuildItRecordsStack, {}), currentLabel === 'tech' && _jsx(BuildItTechStack, {}), currentLabel === 'deep' && _jsx(BuildItDeepStack, {})]\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  labelSelector: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingVertical: 15,\n    backgroundColor: '#1a1a1a',\n    borderBottomWidth: 1,\n    borderBottomColor: '#333'\n  },\n  labelButton: {\n    padding: 10,\n    borderRadius: 5\n  },\n  activeLabel: {\n    backgroundColor: '#333'\n  },\n  labelText: {\n    color: '#888',\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  activeLabelText: {\n    color: '#fff'\n  }\n});","map":{"version":3,"names":["React","useState","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","View","Text","TouchableOpacity","StyleSheet","StatusBar","BuildItRecordsHome","BuildItTechHome","BuildItDeepHome","AboutScreen","ContactScreen","jsx","_jsx","jsxs","_jsxs","Stack","Tab","LabelSelector","_ref","currentLabel","onSelectLabel","style","styles","labelSelector","children","labelButton","activeLabel","onPress","labelText","activeLabelText","BuildItRecordsStack","Navigator","Screen","name","component","options","title","BuildItTechStack","BuildItDeepStack","App","_useState","_useState2","_slicedToArray","setCurrentLabel","container","create","flex","flexDirection","justifyContent","paddingVertical","backgroundColor","borderBottomWidth","borderBottomColor","padding","borderRadius","color","fontSize","fontWeight"],"sources":["/Users/ajsorbello/Documents/MyWebPortfolio/builditrecords/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\n\n// Import screens for each label\nimport BuildItRecordsHome from './src/screens/BuildItRecords/HomeScreen';\nimport BuildItTechHome from './src/screens/BuildItTech/HomeScreen';\nimport BuildItDeepHome from './src/screens/BuildItDeep/HomeScreen';\nimport AboutScreen from './src/screens/AboutScreen';\nimport ContactScreen from './src/screens/ContactScreen';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n// Label selection component\nconst LabelSelector = ({ currentLabel, onSelectLabel }) => (\n  <View style={styles.labelSelector}>\n    <TouchableOpacity \n      style={[styles.labelButton, currentLabel === 'records' && styles.activeLabel]}\n      onPress={() => onSelectLabel('records')}\n    >\n      <Text style={[styles.labelText, currentLabel === 'records' && styles.activeLabelText]}>\n        BUILD IT RECORDS\n      </Text>\n    </TouchableOpacity>\n    <TouchableOpacity \n      style={[styles.labelButton, currentLabel === 'tech' && styles.activeLabel]}\n      onPress={() => onSelectLabel('tech')}\n    >\n      <Text style={[styles.labelText, currentLabel === 'tech' && styles.activeLabelText]}>\n        BUILD IT TECH\n      </Text>\n    </TouchableOpacity>\n    <TouchableOpacity \n      style={[styles.labelButton, currentLabel === 'deep' && styles.activeLabel]}\n      onPress={() => onSelectLabel('deep')}\n    >\n      <Text style={[styles.labelText, currentLabel === 'deep' && styles.activeLabelText]}>\n        BUILD IT DEEP\n      </Text>\n    </TouchableOpacity>\n  </View>\n);\n\n// Stack navigators for each label\nconst BuildItRecordsStack = () => (\n  <Stack.Navigator>\n    <Stack.Screen \n      name=\"BuildItRecordsHome\" \n      component={BuildItRecordsHome}\n      options={{ title: 'Build It Records' }}\n    />\n    <Stack.Screen name=\"About\" component={AboutScreen} />\n    <Stack.Screen name=\"Contact\" component={ContactScreen} />\n  </Stack.Navigator>\n);\n\nconst BuildItTechStack = () => (\n  <Stack.Navigator>\n    <Stack.Screen \n      name=\"BuildItTechHome\" \n      component={BuildItTechHome}\n      options={{ title: 'Build It Tech' }}\n    />\n    <Stack.Screen name=\"About\" component={AboutScreen} />\n    <Stack.Screen name=\"Contact\" component={ContactScreen} />\n  </Stack.Navigator>\n);\n\nconst BuildItDeepStack = () => (\n  <Stack.Navigator>\n    <Stack.Screen \n      name=\"BuildItDeepHome\" \n      component={BuildItDeepHome}\n      options={{ title: 'Build It Deep' }}\n    />\n    <Stack.Screen name=\"About\" component={AboutScreen} />\n    <Stack.Screen name=\"Contact\" component={ContactScreen} />\n  </Stack.Navigator>\n);\n\nexport default function App() {\n  const [currentLabel, setCurrentLabel] = useState('records');\n\n  return (\n    <NavigationContainer>\n      <View style={styles.container}>\n        <LabelSelector currentLabel={currentLabel} onSelectLabel={setCurrentLabel} />\n        {currentLabel === 'records' && <BuildItRecordsStack />}\n        {currentLabel === 'tech' && <BuildItTechStack />}\n        {currentLabel === 'deep' && <BuildItDeepStack />}\n      </View>\n      <StatusBar style=\"auto\" />\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  labelSelector: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingVertical: 15,\n    backgroundColor: '#1a1a1a',\n    borderBottomWidth: 1,\n    borderBottomColor: '#333',\n  },\n  labelButton: {\n    padding: 10,\n    borderRadius: 5,\n  },\n  activeLabel: {\n    backgroundColor: '#333',\n  },\n  labelText: {\n    color: '#888',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  activeLabelText: {\n    color: '#fff',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}