{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ReleaseCard from \"./ReleaseCard\";\nimport { useReleases } from \"../hooks/useReleases\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ReleasesGrid = function ReleasesGrid(_ref) {\n  var label = _ref.label;\n  var _useReleases = useReleases(label),\n    releases = _useReleases.releases,\n    isLoading = _useReleases.isLoading,\n    error = _useReleases.error,\n    refetch = _useReleases.refetch;\n  if (isLoading) {\n    return _jsx(View, {\n      style: styles.loadingContainer,\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#1DB954\"\n      })\n    });\n  }\n  if (error) {\n    return _jsx(View, {\n      style: styles.errorContainer,\n      children: _jsx(Text, {\n        style: styles.errorText,\n        children: error\n      })\n    });\n  }\n  var formatRelease = function formatRelease(release) {\n    var _release$images$;\n    return {\n      id: release.id,\n      title: release.name,\n      artist: release.artists.map(function (artist) {\n        return artist.name;\n      }).join(', '),\n      artwork: ((_release$images$ = release.images[0]) == null ? void 0 : _release$images$.url) || 'https://via.placeholder.com/300',\n      releaseDate: release.release_date,\n      spotifyLink: release.external_urls.spotify,\n      tracks: release.tracks.items.map(function (track) {\n        return {\n          id: track.id,\n          title: track.name,\n          artist: track.artists.map(function (artist) {\n            return artist.name;\n          }).join(', '),\n          duration: `${Math.floor(track.duration_ms / 60000)}:${(track.duration_ms % 60000 / 1000).toFixed(0).padStart(2, '0')}`,\n          spotifyId: track.id,\n          previewUrl: track.preview_url\n        };\n      }),\n      label: label\n    };\n  };\n  return _jsx(ScrollView, {\n    refreshControl: _jsx(RefreshControl, {\n      refreshing: isLoading,\n      onRefresh: refetch,\n      tintColor: \"#1DB954\"\n    }),\n    children: _jsx(View, {\n      style: styles.grid,\n      children: releases.map(function (release) {\n        return _jsx(ReleaseCard, {\n          release: formatRelease(release)\n        }, release.id);\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  grid: {\n    padding: 10\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  errorText: {\n    color: '#ff4444',\n    textAlign: 'center',\n    fontSize: 16\n  }\n});\nexport default ReleasesGrid;","map":{"version":3,"names":["React","View","StyleSheet","ActivityIndicator","Text","RefreshControl","ScrollView","ReleaseCard","useReleases","jsx","_jsx","ReleasesGrid","_ref","label","_useReleases","releases","isLoading","error","refetch","style","styles","loadingContainer","children","size","color","errorContainer","errorText","formatRelease","release","_release$images$","id","title","name","artist","artists","map","join","artwork","images","url","releaseDate","release_date","spotifyLink","external_urls","spotify","tracks","items","track","duration","Math","floor","duration_ms","toFixed","padStart","spotifyId","previewUrl","preview_url","refreshControl","refreshing","onRefresh","tintColor","grid","create","padding","flex","justifyContent","alignItems","textAlign","fontSize"],"sources":["/Users/ajsorbello/Documents/MyWebPortfolio/builditrecords/src/components/ReleasesGrid.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  StyleSheet,\n  ActivityIndicator,\n  Text,\n  RefreshControl,\n  ScrollView,\n} from 'react-native';\nimport ReleaseCard from './ReleaseCard';\nimport { useReleases } from '../hooks/useReleases';\nimport { SpotifyRelease } from '../services/SpotifyService';\n\ninterface ReleasesGridProps {\n  label: 'records' | 'tech' | 'deep';\n}\n\nconst ReleasesGrid: React.FC<ReleasesGridProps> = ({ label }) => {\n  const { releases, isLoading, error, refetch } = useReleases(label);\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#1DB954\" />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>{error}</Text>\n      </View>\n    );\n  }\n\n  const formatRelease = (release: SpotifyRelease) => ({\n    id: release.id,\n    title: release.name,\n    artist: release.artists.map(artist => artist.name).join(', '),\n    artwork: release.images[0]?.url || 'https://via.placeholder.com/300',\n    releaseDate: release.release_date,\n    spotifyLink: release.external_urls.spotify,\n    tracks: release.tracks.items.map(track => ({\n      id: track.id,\n      title: track.name,\n      artist: track.artists.map(artist => artist.name).join(', '),\n      duration: `${Math.floor(track.duration_ms / 60000)}:${(\n        ((track.duration_ms % 60000) / 1000)\n      ).toFixed(0).padStart(2, '0')}`,\n      spotifyId: track.id,\n      previewUrl: track.preview_url,\n    })),\n    label,\n  });\n\n  return (\n    <ScrollView\n      refreshControl={\n        <RefreshControl\n          refreshing={isLoading}\n          onRefresh={refetch}\n          tintColor=\"#1DB954\"\n        />\n      }\n    >\n      <View style={styles.grid}>\n        {releases.map((release) => (\n          <ReleaseCard\n            key={release.id}\n            release={formatRelease(release)}\n          />\n        ))}\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  grid: {\n    padding: 10,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    color: '#ff4444',\n    textAlign: 'center',\n    fontSize: 16,\n  },\n});\n\nexport default ReleasesGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}