{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport SpotifyService from \"../services/SpotifyService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext(undefined);\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAuthenticated = _useState2[0],\n    setIsAuthenticated = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    checkAuthStatus();\n  }, []);\n  var checkAuthStatus = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('spotify_access_token');\n        setIsAuthenticated(!!token);\n      } catch (error) {\n        console.error('Error checking auth status:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function checkAuthStatus() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var login = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var spotifyService = SpotifyService.getInstance();\n        var success = yield spotifyService.authorize();\n        setIsAuthenticated(success);\n        return success;\n      } catch (error) {\n        console.error('Login error:', error);\n        return false;\n      }\n    });\n    return function login() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.multiRemove(['spotify_access_token', 'spotify_token_expiration', 'spotify_refresh_token']);\n        setIsAuthenticated(false);\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    });\n    return function logout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated: isAuthenticated,\n      login: login,\n      logout: logout,\n      loading: loading\n    },\n    children: children\n  });\n};\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\nexport default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AsyncStorage","SpotifyService","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","isAuthenticated","setIsAuthenticated","_useState3","_useState4","loading","setLoading","checkAuthStatus","_ref2","_asyncToGenerator","token","getItem","error","console","apply","arguments","login","_ref3","spotifyService","getInstance","success","authorize","logout","_ref4","multiRemove","Provider","value","useAuth","context","Error"],"sources":["/Users/ajsorbello/Documents/MyWebPortfolio/builditrecords/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport SpotifyService from '../services/SpotifyService';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  login: () => Promise<boolean>;\n  logout: () => Promise<void>;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = await AsyncStorage.getItem('spotify_access_token');\n      setIsAuthenticated(!!token);\n    } catch (error) {\n      console.error('Error checking auth status:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async () => {\n    try {\n      const spotifyService = SpotifyService.getInstance();\n      const success = await spotifyService.authorize();\n      setIsAuthenticated(success);\n      return success;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await AsyncStorage.multiRemove([\n        'spotify_access_token',\n        'spotify_token_expiration',\n        'spotify_refresh_token',\n      ]);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        login,\n        logout,\n        loading,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}