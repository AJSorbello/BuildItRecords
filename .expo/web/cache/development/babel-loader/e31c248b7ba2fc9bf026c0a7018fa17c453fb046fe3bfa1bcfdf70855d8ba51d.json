{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport axios from 'axios';\nimport { encode as base64Encode } from 'base-64';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri } from 'expo-auth-session';\nimport { SPOTIFY_CLIENT_ID, SPOTIFY_CLIENT_SECRET } from '@env';\nimport * as Linking from 'expo-linking';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar SpotifyService = function () {\n  function SpotifyService() {\n    _classCallCheck(this, SpotifyService);\n    this.accessToken = null;\n    this.tokenExpiration = 0;\n    this.redirectUri = makeRedirectUri({\n      scheme: 'builditrecords',\n      path: 'spotify-auth-callback'\n    });\n  }\n  return _createClass(SpotifyService, [{\n    key: \"getAccessToken\",\n    value: function () {\n      var _getAccessToken = _asyncToGenerator(function* () {\n        try {\n          if (this.accessToken && Date.now() < this.tokenExpiration) {\n            return this.accessToken;\n          }\n          var storedToken = yield AsyncStorage.getItem('spotify_access_token');\n          var storedExpiration = yield AsyncStorage.getItem('spotify_token_expiration');\n          if (storedToken && storedExpiration && Date.now() < parseInt(storedExpiration)) {\n            this.accessToken = storedToken;\n            this.tokenExpiration = parseInt(storedExpiration);\n            return storedToken;\n          }\n          var auth = base64Encode(`${SPOTIFY_CLIENT_ID}:${SPOTIFY_CLIENT_SECRET}`);\n          var response = yield axios.post('https://accounts.spotify.com/api/token', 'grant_type=client_credentials', {\n            headers: {\n              Authorization: `Basic ${auth}`,\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          });\n          this.accessToken = response.data.access_token;\n          this.tokenExpiration = Date.now() + response.data.expires_in * 1000;\n          yield AsyncStorage.setItem('spotify_access_token', this.accessToken);\n          yield AsyncStorage.setItem('spotify_token_expiration', this.tokenExpiration.toString());\n          return this.accessToken;\n        } catch (error) {\n          console.error('Error getting Spotify access token:', error);\n          throw error;\n        }\n      });\n      function getAccessToken() {\n        return _getAccessToken.apply(this, arguments);\n      }\n      return getAccessToken;\n    }()\n  }, {\n    key: \"authorize\",\n    value: function () {\n      var _authorize = _asyncToGenerator(function* () {\n        try {\n          var authUrl = new URL('https://accounts.spotify.com/authorize');\n          var params = new URLSearchParams({\n            client_id: SPOTIFY_CLIENT_ID,\n            response_type: 'code',\n            redirect_uri: this.redirectUri,\n            scope: 'user-read-private user-read-email playlist-modify-public playlist-modify-private'\n          });\n          authUrl.search = params.toString();\n          if (Platform.OS === 'web') {\n            window.location.href = authUrl.toString();\n            return true;\n          } else {\n            var result = yield WebBrowser.openAuthSessionAsync(authUrl.toString(), this.redirectUri);\n            if (result.type === 'success') {\n              var code = Linking.parse(result.url).queryParams.code;\n              yield this.exchangeCodeForToken(code);\n              return true;\n            }\n          }\n          return false;\n        } catch (error) {\n          console.error('Authorization error:', error);\n          return false;\n        }\n      });\n      function authorize() {\n        return _authorize.apply(this, arguments);\n      }\n      return authorize;\n    }()\n  }, {\n    key: \"exchangeCodeForToken\",\n    value: function () {\n      var _exchangeCodeForToken = _asyncToGenerator(function* (code) {\n        try {\n          var response = yield axios.post('https://accounts.spotify.com/api/token', new URLSearchParams({\n            grant_type: 'authorization_code',\n            code: code,\n            redirect_uri: this.redirectUri,\n            client_id: SPOTIFY_CLIENT_ID,\n            client_secret: SPOTIFY_CLIENT_SECRET\n          }).toString(), {\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          });\n          this.accessToken = response.data.access_token;\n          this.tokenExpiration = Date.now() + response.data.expires_in * 1000;\n          yield AsyncStorage.setItem('spotify_access_token', this.accessToken);\n          yield AsyncStorage.setItem('spotify_token_expiration', this.tokenExpiration.toString());\n          yield AsyncStorage.setItem('spotify_refresh_token', response.data.refresh_token);\n        } catch (error) {\n          console.error('Token exchange error:', error);\n          throw error;\n        }\n      });\n      function exchangeCodeForToken(_x) {\n        return _exchangeCodeForToken.apply(this, arguments);\n      }\n      return exchangeCodeForToken;\n    }()\n  }, {\n    key: \"searchByISRC\",\n    value: function () {\n      var _searchByISRC = _asyncToGenerator(function* (isrc) {\n        try {\n          var token = yield this.getAccessToken();\n          var response = yield axios.get(`https://api.spotify.com/v1/search?q=isrc:${isrc}&type=track`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          var tracks = response.data.tracks.items;\n          return tracks.length > 0 ? tracks[0] : null;\n        } catch (error) {\n          console.error('Error searching Spotify by ISRC:', error);\n          return null;\n        }\n      });\n      function searchByISRC(_x2) {\n        return _searchByISRC.apply(this, arguments);\n      }\n      return searchByISRC;\n    }()\n  }, {\n    key: \"searchByUPC\",\n    value: function () {\n      var _searchByUPC = _asyncToGenerator(function* (upc) {\n        try {\n          var token = yield this.getAccessToken();\n          var response = yield axios.get(`https://api.spotify.com/v1/search?q=upc:${upc}&type=album`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          var albums = response.data.albums.items;\n          if (albums.length > 0) {\n            var albumTracks = yield axios.get(`https://api.spotify.com/v1/albums/${albums[0].id}/tracks`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            return albumTracks.data.items[0] || null;\n          }\n          return null;\n        } catch (error) {\n          console.error('Error searching Spotify by UPC:', error);\n          return null;\n        }\n      });\n      function searchByUPC(_x3) {\n        return _searchByUPC.apply(this, arguments);\n      }\n      return searchByUPC;\n    }()\n  }, {\n    key: \"getTrackPreview\",\n    value: function () {\n      var _getTrackPreview = _asyncToGenerator(function* (trackId) {\n        try {\n          var token = yield this.getAccessToken();\n          var response = yield axios.get(`https://api.spotify.com/v1/tracks/${trackId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          return response.data.preview_url;\n        } catch (error) {\n          console.error('Error getting track preview:', error);\n          return null;\n        }\n      });\n      function getTrackPreview(_x4) {\n        return _getTrackPreview.apply(this, arguments);\n      }\n      return getTrackPreview;\n    }()\n  }, {\n    key: \"getLabelReleases\",\n    value: function () {\n      var _getLabelReleases = _asyncToGenerator(function* (labelId) {\n        try {\n          var token = yield this.getAccessToken();\n          if (!token) throw new Error('No access token available');\n          var labelSpotifyIds = {\n            'records': '5K4W6rqBFWDnAN6FQUkS6x',\n            'tech': '3TVXtAsR1Inumwj472S9r4',\n            'deep': '2YZyLoL8N0Wb9xBt1NhZWg'\n          };\n          var spotifyId = labelSpotifyIds[labelId];\n          if (!spotifyId) throw new Error('Invalid label ID');\n          var response = yield axios.get(`https://api.spotify.com/v1/artists/${spotifyId}/albums`, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            },\n            params: {\n              include_groups: 'album,single',\n              limit: 50,\n              market: 'US'\n            }\n          });\n          var releases = yield Promise.all(response.data.items.map(function () {\n            var _ref = _asyncToGenerator(function* (album) {\n              var albumDetails = yield axios.get(`https://api.spotify.com/v1/albums/${album.id}`, {\n                headers: {\n                  'Authorization': `Bearer ${token}`\n                }\n              });\n              return albumDetails.data;\n            });\n            return function (_x6) {\n              return _ref.apply(this, arguments);\n            };\n          }()));\n          return releases.sort(function (a, b) {\n            return new Date(b.release_date).getTime() - new Date(a.release_date).getTime();\n          });\n        } catch (error) {\n          console.error('Error fetching label releases:', error);\n          throw error;\n        }\n      });\n      function getLabelReleases(_x5) {\n        return _getLabelReleases.apply(this, arguments);\n      }\n      return getLabelReleases;\n    }()\n  }, {\n    key: \"getLatestRelease\",\n    value: function () {\n      var _getLatestRelease = _asyncToGenerator(function* (labelId) {\n        try {\n          var releases = yield this.getLabelReleases(labelId);\n          return releases.length > 0 ? releases[0] : null;\n        } catch (error) {\n          console.error('Error fetching latest release:', error);\n          throw error;\n        }\n      });\n      function getLatestRelease(_x7) {\n        return _getLatestRelease.apply(this, arguments);\n      }\n      return getLatestRelease;\n    }()\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!SpotifyService.instance) {\n        SpotifyService.instance = new SpotifyService();\n      }\n      return SpotifyService.instance;\n    }\n  }]);\n}();\nexport default SpotifyService;","map":{"version":3,"names":["axios","encode","base64Encode","AsyncStorage","WebBrowser","makeRedirectUri","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","Linking","Platform","SpotifyService","_classCallCheck","accessToken","tokenExpiration","redirectUri","scheme","path","_createClass","key","value","_getAccessToken","_asyncToGenerator","Date","now","storedToken","getItem","storedExpiration","parseInt","auth","response","post","headers","Authorization","data","access_token","expires_in","setItem","toString","error","console","getAccessToken","apply","arguments","_authorize","authUrl","URL","params","URLSearchParams","client_id","response_type","redirect_uri","scope","search","OS","window","location","href","result","openAuthSessionAsync","type","code","parse","url","queryParams","exchangeCodeForToken","authorize","_exchangeCodeForToken","grant_type","client_secret","refresh_token","_x","_searchByISRC","isrc","token","get","tracks","items","length","searchByISRC","_x2","_searchByUPC","upc","albums","albumTracks","id","searchByUPC","_x3","_getTrackPreview","trackId","preview_url","getTrackPreview","_x4","_getLabelReleases","labelId","Error","labelSpotifyIds","spotifyId","include_groups","limit","market","releases","Promise","all","map","_ref","album","albumDetails","_x6","sort","a","b","release_date","getTime","getLabelReleases","_x5","_getLatestRelease","getLatestRelease","_x7","getInstance","instance"],"sources":["/Users/ajsorbello/Documents/MyWebPortfolio/builditrecords/src/services/SpotifyService.ts"],"sourcesContent":["import axios from 'axios';\nimport { encode as base64Encode } from 'base-64';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri } from 'expo-auth-session';\nimport { SPOTIFY_CLIENT_ID, SPOTIFY_CLIENT_SECRET } from '@env';\nimport * as Linking from 'expo-linking';\nimport { Platform } from 'react-native';\n\nexport interface SpotifyTrack {\n  id: string;\n  name: string;\n  artists: Array<{ name: string }>;\n  duration_ms: number;\n  preview_url: string | null;\n  external_urls: {\n    spotify: string;\n  };\n}\n\nexport interface SpotifyRelease {\n  id: string;\n  name: string;\n  artists: Array<{ name: string }>;\n  images: Array<{ url: string }>;\n  release_date: string;\n  external_urls: {\n    spotify: string;\n  };\n  tracks: {\n    items: SpotifyTrack[];\n  };\n}\n\nclass SpotifyService {\n  private static instance: SpotifyService;\n  private accessToken: string | null = null;\n  private tokenExpiration: number = 0;\n  private readonly redirectUri: string;\n\n  private constructor() {\n    this.redirectUri = makeRedirectUri({\n      scheme: 'builditrecords',\n      path: 'spotify-auth-callback',\n    });\n  }\n\n  static getInstance(): SpotifyService {\n    if (!SpotifyService.instance) {\n      SpotifyService.instance = new SpotifyService();\n    }\n    return SpotifyService.instance;\n  }\n\n  private async getAccessToken(): Promise<string> {\n    try {\n      if (this.accessToken && Date.now() < this.tokenExpiration) {\n        return this.accessToken;\n      }\n\n      const storedToken = await AsyncStorage.getItem('spotify_access_token');\n      const storedExpiration = await AsyncStorage.getItem('spotify_token_expiration');\n      \n      if (storedToken && storedExpiration && Date.now() < parseInt(storedExpiration)) {\n        this.accessToken = storedToken;\n        this.tokenExpiration = parseInt(storedExpiration);\n        return storedToken;\n      }\n\n      const auth = base64Encode(`${SPOTIFY_CLIENT_ID}:${SPOTIFY_CLIENT_SECRET}`);\n      const response = await axios.post(\n        'https://accounts.spotify.com/api/token',\n        'grant_type=client_credentials',\n        {\n          headers: {\n            Authorization: `Basic ${auth}`,\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n\n      this.accessToken = response.data.access_token;\n      this.tokenExpiration = Date.now() + (response.data.expires_in * 1000);\n\n      await AsyncStorage.setItem('spotify_access_token', this.accessToken);\n      await AsyncStorage.setItem('spotify_token_expiration', this.tokenExpiration.toString());\n\n      return this.accessToken;\n    } catch (error) {\n      console.error('Error getting Spotify access token:', error);\n      throw error;\n    }\n  }\n\n  async authorize(): Promise<boolean> {\n    try {\n      const authUrl = new URL('https://accounts.spotify.com/authorize');\n      const params = new URLSearchParams({\n        client_id: SPOTIFY_CLIENT_ID,\n        response_type: 'code',\n        redirect_uri: this.redirectUri,\n        scope: 'user-read-private user-read-email playlist-modify-public playlist-modify-private',\n      });\n\n      authUrl.search = params.toString();\n      \n      if (Platform.OS === 'web') {\n        window.location.href = authUrl.toString();\n        return true;\n      } else {\n        const result = await WebBrowser.openAuthSessionAsync(\n          authUrl.toString(),\n          this.redirectUri\n        );\n\n        if (result.type === 'success') {\n          const { code } = Linking.parse(result.url).queryParams;\n          await this.exchangeCodeForToken(code);\n          return true;\n        }\n      }\n      \n      return false;\n    } catch (error) {\n      console.error('Authorization error:', error);\n      return false;\n    }\n  }\n\n  private async exchangeCodeForToken(code: string): Promise<void> {\n    try {\n      const response = await axios.post(\n        'https://accounts.spotify.com/api/token',\n        new URLSearchParams({\n          grant_type: 'authorization_code',\n          code,\n          redirect_uri: this.redirectUri,\n          client_id: SPOTIFY_CLIENT_ID,\n          client_secret: SPOTIFY_CLIENT_SECRET,\n        }).toString(),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n\n      this.accessToken = response.data.access_token;\n      this.tokenExpiration = Date.now() + (response.data.expires_in * 1000);\n\n      await AsyncStorage.setItem('spotify_access_token', this.accessToken);\n      await AsyncStorage.setItem('spotify_token_expiration', this.tokenExpiration.toString());\n      await AsyncStorage.setItem('spotify_refresh_token', response.data.refresh_token);\n    } catch (error) {\n      console.error('Token exchange error:', error);\n      throw error;\n    }\n  }\n\n  async searchByISRC(isrc: string): Promise<SpotifyTrack | null> {\n    try {\n      const token = await this.getAccessToken();\n      const response = await axios.get(\n        `https://api.spotify.com/v1/search?q=isrc:${isrc}&type=track`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      const tracks = response.data.tracks.items;\n      return tracks.length > 0 ? tracks[0] : null;\n    } catch (error) {\n      console.error('Error searching Spotify by ISRC:', error);\n      return null;\n    }\n  }\n\n  async searchByUPC(upc: string): Promise<SpotifyTrack | null> {\n    try {\n      const token = await this.getAccessToken();\n      const response = await axios.get(\n        `https://api.spotify.com/v1/search?q=upc:${upc}&type=album`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      const albums = response.data.albums.items;\n      if (albums.length > 0) {\n        const albumTracks = await axios.get(\n          `https://api.spotify.com/v1/albums/${albums[0].id}/tracks`,\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n        return albumTracks.data.items[0] || null;\n      }\n      return null;\n    } catch (error) {\n      console.error('Error searching Spotify by UPC:', error);\n      return null;\n    }\n  }\n\n  async getTrackPreview(trackId: string): Promise<string | null> {\n    try {\n      const token = await this.getAccessToken();\n      const response = await axios.get(\n        `https://api.spotify.com/v1/tracks/${trackId}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      return response.data.preview_url;\n    } catch (error) {\n      console.error('Error getting track preview:', error);\n      return null;\n    }\n  }\n\n  async getLabelReleases(labelId: string): Promise<SpotifyRelease[]> {\n    try {\n      const token = await this.getAccessToken();\n      if (!token) throw new Error('No access token available');\n\n      // Map label names to their Spotify artist IDs\n      const labelSpotifyIds = {\n        'records': '5K4W6rqBFWDnAN6FQUkS6x', // Replace with actual Spotify artist ID for Build It Records\n        'tech': '3TVXtAsR1Inumwj472S9r4', // Replace with actual Spotify artist ID for Build It Tech\n        'deep': '2YZyLoL8N0Wb9xBt1NhZWg', // Replace with actual Spotify artist ID for Build It Deep\n      };\n\n      const spotifyId = labelSpotifyIds[labelId];\n      if (!spotifyId) throw new Error('Invalid label ID');\n\n      const response = await axios.get(\n        `https://api.spotify.com/v1/artists/${spotifyId}/albums`,\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n          params: {\n            include_groups: 'album,single',\n            limit: 50,\n            market: 'US',\n          },\n        }\n      );\n\n      // Fetch full album details for each release\n      const releases = await Promise.all(\n        response.data.items.map(async (album: any) => {\n          const albumDetails = await axios.get(\n            `https://api.spotify.com/v1/albums/${album.id}`,\n            {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n            }\n          );\n          return albumDetails.data;\n        })\n      );\n\n      return releases.sort((a, b) => \n        new Date(b.release_date).getTime() - new Date(a.release_date).getTime()\n      );\n    } catch (error) {\n      console.error('Error fetching label releases:', error);\n      throw error;\n    }\n  }\n\n  async getLatestRelease(labelId: string): Promise<SpotifyRelease | null> {\n    try {\n      const releases = await this.getLabelReleases(labelId);\n      return releases.length > 0 ? releases[0] : null;\n    } catch (error) {\n      console.error('Error fetching latest release:', error);\n      throw error;\n    }\n  }\n}\n\nexport default SpotifyService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}