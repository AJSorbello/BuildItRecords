{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SpotifyAuthScreen from \"./src/screens/Auth/SpotifyAuthScreen\";\nimport TabNavigator from \"./src/navigation/TabNavigator\";\nimport { AuthProvider, useAuth } from \"./src/contexts/AuthContext\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction NavigationContent() {\n  var _useAuth = useAuth(),\n    isAuthenticated = _useAuth.isAuthenticated,\n    loading = _useAuth.loading;\n  if (loading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#121212'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#1DB954\"\n      })\n    });\n  }\n  return _jsx(Stack.Navigator, {\n    initialRouteName: isAuthenticated ? 'Main' : 'Auth',\n    screenOptions: {\n      headerShown: false\n    },\n    children: !isAuthenticated ? _jsx(Stack.Screen, {\n      name: \"Auth\",\n      component: SpotifyAuthScreen\n    }) : _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: TabNavigator\n    })\n  });\n}\nexport default function App() {\n  return _jsx(AuthProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsx(NavigationContent, {})\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","SpotifyAuthScreen","TabNavigator","AuthProvider","useAuth","ActivityIndicator","View","jsx","_jsx","Stack","NavigationContent","_useAuth","isAuthenticated","loading","style","flex","justifyContent","alignItems","backgroundColor","children","size","color","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","component","App"],"sources":["/Users/ajsorbello/Documents/MyWebPortfolio/builditrecords/App.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SpotifyAuthScreen from './src/screens/Auth/SpotifyAuthScreen';\nimport TabNavigator from './src/navigation/TabNavigator';\nimport { AuthProvider, useAuth } from './src/contexts/AuthContext';\nimport { ActivityIndicator, View } from 'react-native';\n\nexport type RootStackParamList = {\n  Auth: undefined;\n  Main: undefined;\n};\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction NavigationContent() {\n  const { isAuthenticated, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#121212' }}>\n        <ActivityIndicator size=\"large\" color=\"#1DB954\" />\n      </View>\n    );\n  }\n\n  return (\n    <Stack.Navigator\n      initialRouteName={isAuthenticated ? 'Main' : 'Auth'}\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      {!isAuthenticated ? (\n        <Stack.Screen name=\"Auth\" component={SpotifyAuthScreen} />\n      ) : (\n        <Stack.Screen name=\"Main\" component={TabNavigator} />\n      )}\n    </Stack.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <NavigationContainer>\n        <NavigationContent />\n      </NavigationContainer>\n    </AuthProvider>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,iBAAiB;AACxB,OAAOC,YAAY;AACnB,SAASC,YAAY,EAAEC,OAAO;AAAqC,OAAAC,iBAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAQnE,IAAMC,KAAK,GAAGT,0BAA0B,CAAqB,CAAC;AAE9D,SAASU,iBAAiBA,CAAA,EAAG;EAC3B,IAAAC,QAAA,GAAqCP,OAAO,CAAC,CAAC;IAAtCQ,eAAe,GAAAD,QAAA,CAAfC,eAAe;IAAEC,OAAO,GAAAF,QAAA,CAAPE,OAAO;EAEhC,IAAIA,OAAO,EAAE;IACX,OACEL,IAAA,CAACF,IAAI;MAACQ,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,eAAe,EAAE;MAAU,CAAE;MAAAC,QAAA,EACnGX,IAAA,CAACH,iBAAiB;QAACe,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS,CAAE;IAAC,CAC9C,CAAC;EAEX;EAEA,OACEb,IAAA,CAACC,KAAK,CAACa,SAAS;IACdC,gBAAgB,EAAEX,eAAe,GAAG,MAAM,GAAG,MAAO;IACpDY,aAAa,EAAE;MACbC,WAAW,EAAE;IACf,CAAE;IAAAN,QAAA,EAED,CAACP,eAAe,GACfJ,IAAA,CAACC,KAAK,CAACiB,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAE3B;IAAkB,CAAE,CAAC,GAE1DO,IAAA,CAACC,KAAK,CAACiB,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAE1B;IAAa,CAAE;EACrD,CACc,CAAC;AAEtB;AAEA,eAAe,SAAS2B,GAAGA,CAAA,EAAG;EAC5B,OACErB,IAAA,CAACL,YAAY;IAAAgB,QAAA,EACXX,IAAA,CAACT,mBAAmB;MAAAoB,QAAA,EAClBX,IAAA,CAACE,iBAAiB,IAAE;IAAC,CACF;EAAC,CACV,CAAC;AAEnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}