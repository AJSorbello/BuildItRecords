{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Audio } from 'expo-av';\nimport SpotifyService from \"../services/SpotifyService\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ReleaseCard = function ReleaseCard(_ref) {\n  var title = _ref.title,\n    artist = _ref.artist,\n    artwork = _ref.artwork,\n    releaseDate = _ref.releaseDate,\n    genre = _ref.genre,\n    beatportLink = _ref.beatportLink,\n    spotifyLink = _ref.spotifyLink,\n    soundcloudLink = _ref.soundcloudLink,\n    tracks = _ref.tracks,\n    label = _ref.label,\n    _ref$isLatestRelease = _ref.isLatestRelease,\n    isLatestRelease = _ref$isLatestRelease === void 0 ? false : _ref$isLatestRelease,\n    isrc = _ref.isrc;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    sound = _useState2[0],\n    setSound = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isPlaying = _useState4[0],\n    setIsPlaying = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    previewUrl = _useState6[0],\n    setPreviewUrl = _useState6[1];\n  var labelColors = {\n    records: '#ff4081',\n    tech: '#00ff00',\n    deep: '#4a90e2'\n  };\n  var formattedDate = new Date(releaseDate).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n  useEffect(function () {\n    var loadPreview = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        if (isrc) {\n          var spotifyService = SpotifyService.getInstance();\n          var track = yield spotifyService.searchByISRC(isrc);\n          if (track) {\n            var preview = yield spotifyService.getTrackPreview(track.id);\n            setPreviewUrl(preview);\n          }\n        }\n      });\n      return function loadPreview() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadPreview();\n  }, [isrc]);\n  var handlePlayPause = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (!previewUrl) return;\n      try {\n        if (sound) {\n          if (isPlaying) {\n            yield sound.pauseAsync();\n          } else {\n            yield sound.playAsync();\n          }\n          setIsPlaying(!isPlaying);\n        } else {\n          var _yield$Audio$Sound$cr = yield Audio.Sound.createAsync({\n              uri: previewUrl\n            }, {\n              shouldPlay: true\n            }),\n            newSound = _yield$Audio$Sound$cr.sound;\n          setSound(newSound);\n          setIsPlaying(true);\n          newSound.setOnPlaybackStatusUpdate(function () {\n            var _ref4 = _asyncToGenerator(function* (status) {\n              if (status.didJustFinish) {\n                setIsPlaying(false);\n                yield newSound.unloadAsync();\n                setSound(null);\n              }\n            });\n            return function (_x) {\n              return _ref4.apply(this, arguments);\n            };\n          }());\n        }\n      } catch (error) {\n        console.error('Error playing preview:', error);\n      }\n    });\n    return function handlePlayPause() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    return function () {\n      if (sound) {\n        sound.unloadAsync();\n      }\n    };\n  }, [sound]);\n  var handleLink = function handleLink(url) {\n    if (url) {\n      Linking.openURL(url);\n    }\n  };\n  if (isLatestRelease) {\n    return _jsxs(TouchableOpacity, {\n      style: styles.latestContainer,\n      children: [_jsxs(View, {\n        style: styles.latestImageContainer,\n        children: [_jsx(Image, {\n          source: {\n            uri: artwork\n          },\n          style: styles.latestArtwork\n        }), _jsx(View, {\n          style: [styles.latestBadge, {\n            backgroundColor: labelColors[label]\n          }],\n          children: _jsx(Text, {\n            style: styles.latestBadgeText,\n            children: \"Latest Release\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.latestInfoContainer,\n        children: [_jsxs(View, {\n          style: styles.latestHeaderContainer,\n          children: [_jsxs(View, {\n            style: styles.latestTitleContainer,\n            children: [_jsx(Text, {\n              style: styles.latestTitle,\n              children: title\n            }), _jsx(Text, {\n              style: styles.latestArtist,\n              children: artist\n            }), _jsxs(Text, {\n              style: styles.latestDetails,\n              children: [genre, \" \\u2022 \", formattedDate]\n            })]\n          }), _jsxs(View, {\n            style: styles.latestButtonsContainer,\n            children: [beatportLink && _jsx(TouchableOpacity, {\n              style: [styles.latestButton, {\n                backgroundColor: labelColors[label]\n              }],\n              onPress: function onPress() {\n                return handleLink(beatportLink);\n              },\n              children: _jsx(Text, {\n                style: styles.latestButtonText,\n                children: \"BP\"\n              })\n            }), spotifyLink && _jsx(TouchableOpacity, {\n              style: [styles.latestButton, {\n                backgroundColor: '#1DB954'\n              }],\n              onPress: function onPress() {\n                return handleLink(spotifyLink);\n              },\n              children: _jsx(Text, {\n                style: styles.latestButtonText,\n                children: \"SP\"\n              })\n            }), soundcloudLink && _jsx(TouchableOpacity, {\n              style: [styles.latestButton, {\n                backgroundColor: '#ff5500'\n              }],\n              onPress: function onPress() {\n                return handleLink(soundcloudLink);\n              },\n              children: _jsx(Text, {\n                style: styles.latestButtonText,\n                children: \"SC\"\n              })\n            }), previewUrl && _jsx(TouchableOpacity, {\n              style: [styles.latestButton, {\n                backgroundColor: isPlaying ? '#1DB954' : '#666666'\n              }],\n              onPress: handlePlayPause,\n              children: _jsx(Text, {\n                style: styles.latestButtonText,\n                children: isPlaying ? '■' : '▶'\n              })\n            })]\n          })]\n        }), _jsx(View, {\n          style: styles.tracksContainer,\n          children: tracks.slice(0, 3).map(function (track) {\n            return _jsxs(Text, {\n              style: styles.trackInfo,\n              children: [track.title, \" (\", track.duration, \")\"]\n            }, track.id);\n          })\n        })]\n      })]\n    });\n  }\n  return _jsxs(TouchableOpacity, {\n    style: styles.priorContainer,\n    children: [_jsx(Image, {\n      source: {\n        uri: artwork\n      },\n      style: styles.priorArtwork\n    }), _jsxs(View, {\n      style: styles.priorInfoContainer,\n      children: [_jsxs(View, {\n        style: styles.priorTextContainer,\n        children: [_jsx(Text, {\n          style: styles.priorTitle,\n          children: title\n        }), _jsx(Text, {\n          style: styles.priorArtist,\n          children: artist\n        }), _jsxs(Text, {\n          style: styles.priorDetails,\n          children: [formattedDate, \" \\u2022 \", genre]\n        })]\n      }), _jsxs(View, {\n        style: styles.priorButtonsContainer,\n        children: [beatportLink && _jsx(TouchableOpacity, {\n          style: [styles.priorButton, {\n            backgroundColor: labelColors[label]\n          }],\n          onPress: function onPress() {\n            return handleLink(beatportLink);\n          },\n          children: _jsx(Text, {\n            style: styles.priorButtonText,\n            children: \"BP\"\n          })\n        }), spotifyLink && _jsx(TouchableOpacity, {\n          style: [styles.priorButton, {\n            backgroundColor: '#1DB954'\n          }],\n          onPress: function onPress() {\n            return handleLink(spotifyLink);\n          },\n          children: _jsx(Text, {\n            style: styles.priorButtonText,\n            children: \"SP\"\n          })\n        }), soundcloudLink && _jsx(TouchableOpacity, {\n          style: [styles.priorButton, {\n            backgroundColor: '#ff5500'\n          }],\n          onPress: function onPress() {\n            return handleLink(soundcloudLink);\n          },\n          children: _jsx(Text, {\n            style: styles.priorButtonText,\n            children: \"SC\"\n          })\n        }), previewUrl && _jsx(TouchableOpacity, {\n          style: [styles.priorButton, {\n            backgroundColor: isPlaying ? '#1DB954' : '#666666'\n          }],\n          onPress: handlePlayPause,\n          children: _jsx(Text, {\n            style: styles.priorButtonText,\n            children: isPlaying ? '■' : '▶'\n          })\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  latestContainer: {\n    backgroundColor: '#1E1E1E',\n    borderRadius: 8,\n    overflow: 'hidden'\n  },\n  latestImageContainer: {\n    position: 'relative',\n    width: '100%',\n    aspectRatio: 1\n  },\n  latestArtwork: {\n    width: '100%',\n    height: '100%'\n  },\n  latestBadge: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 4\n  },\n  latestBadgeText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  latestInfoContainer: {\n    padding: 15\n  },\n  latestHeaderContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start'\n  },\n  latestTitleContainer: {\n    flex: 1,\n    marginRight: 10\n  },\n  latestTitle: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  latestArtist: {\n    color: '#BBBBBB',\n    fontSize: 14,\n    marginBottom: 4\n  },\n  latestDetails: {\n    color: '#888888',\n    fontSize: 12\n  },\n  latestButtonsContainer: {\n    flexDirection: 'row',\n    gap: 6\n  },\n  latestButton: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  latestButtonText: {\n    color: '#FFFFFF',\n    fontSize: 11,\n    fontWeight: 'bold'\n  },\n  tracksContainer: {\n    marginTop: 15\n  },\n  trackInfo: {\n    color: '#BBBBBB',\n    fontSize: 12,\n    marginBottom: 2\n  },\n  priorContainer: {\n    backgroundColor: '#1E1E1E',\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginBottom: 10,\n    flexDirection: 'row',\n    height: 80\n  },\n  priorArtwork: {\n    width: 80,\n    height: 80\n  },\n  priorInfoContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 10\n  },\n  priorTextContainer: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  priorTitle: {\n    color: '#FFFFFF',\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 2\n  },\n  priorArtist: {\n    color: '#BBBBBB',\n    fontSize: 12,\n    marginBottom: 2\n  },\n  priorDetails: {\n    color: '#888888',\n    fontSize: 11\n  },\n  priorButtonsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n    marginLeft: 10\n  },\n  priorButton: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  priorButtonText: {\n    color: '#FFFFFF',\n    fontSize: 11,\n    fontWeight: 'bold'\n  }\n});\nexport default ReleaseCard;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","StyleSheet","TouchableOpacity","Linking","Audio","SpotifyService","jsx","_jsx","jsxs","_jsxs","ReleaseCard","_ref","title","artist","artwork","releaseDate","genre","beatportLink","spotifyLink","soundcloudLink","tracks","label","_ref$isLatestRelease","isLatestRelease","isrc","_useState","_useState2","_slicedToArray","sound","setSound","_useState3","_useState4","isPlaying","setIsPlaying","_useState5","_useState6","previewUrl","setPreviewUrl","labelColors","records","tech","deep","formattedDate","Date","toLocaleDateString","year","month","day","loadPreview","_ref2","_asyncToGenerator","spotifyService","getInstance","track","searchByISRC","preview","getTrackPreview","id","apply","arguments","handlePlayPause","_ref3","pauseAsync","playAsync","_yield$Audio$Sound$cr","Sound","createAsync","uri","shouldPlay","newSound","setOnPlaybackStatusUpdate","_ref4","status","didJustFinish","unloadAsync","_x","error","console","handleLink","url","openURL","style","styles","latestContainer","children","latestImageContainer","source","latestArtwork","latestBadge","backgroundColor","latestBadgeText","latestInfoContainer","latestHeaderContainer","latestTitleContainer","latestTitle","latestArtist","latestDetails","latestButtonsContainer","latestButton","onPress","latestButtonText","tracksContainer","slice","map","trackInfo","duration","priorContainer","priorArtwork","priorInfoContainer","priorTextContainer","priorTitle","priorArtist","priorDetails","priorButtonsContainer","priorButton","priorButtonText","create","borderRadius","overflow","position","width","aspectRatio","height","top","right","paddingHorizontal","paddingVertical","color","fontSize","fontWeight","padding","flexDirection","justifyContent","alignItems","flex","marginRight","marginBottom","gap","marginTop","marginLeft"],"sources":["/Users/ajsorbello/Documents/MyWebPortfolio/builditrecords/src/components/ReleaseCard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Image, StyleSheet, TouchableOpacity, Dimensions, Linking } from 'react-native';\nimport { Audio } from 'expo-av';\nimport SpotifyService from '../services/SpotifyService';\n\ninterface Track {\n  id: string;\n  title: string;\n  artist: string;\n  duration: string;\n  spotifyId?: string;\n  previewUrl?: string;\n}\n\ninterface ReleaseCardProps {\n  title: string;\n  artist: string;\n  artwork: string;\n  releaseDate: string;\n  genre: string;\n  beatportLink?: string;\n  spotifyLink?: string;\n  soundcloudLink?: string;\n  tracks: Track[];\n  label: 'records' | 'tech' | 'deep';\n  isLatestRelease?: boolean;\n  isrc?: string;\n}\n\nconst ReleaseCard: React.FC<ReleaseCardProps> = ({\n  title,\n  artist,\n  artwork,\n  releaseDate,\n  genre,\n  beatportLink,\n  spotifyLink,\n  soundcloudLink,\n  tracks,\n  label,\n  isLatestRelease = false,\n  isrc,\n}) => {\n  const [sound, setSound] = useState<Audio.Sound | null>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null);\n\n  const labelColors = {\n    records: '#ff4081',\n    tech: '#00ff00',\n    deep: '#4a90e2',\n  };\n\n  const formattedDate = new Date(releaseDate).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n\n  useEffect(() => {\n    const loadPreview = async () => {\n      if (isrc) {\n        const spotifyService = SpotifyService.getInstance();\n        const track = await spotifyService.searchByISRC(isrc);\n        if (track) {\n          const preview = await spotifyService.getTrackPreview(track.id);\n          setPreviewUrl(preview);\n        }\n      }\n    };\n\n    loadPreview();\n  }, [isrc]);\n\n  const handlePlayPause = async () => {\n    if (!previewUrl) return;\n\n    try {\n      if (sound) {\n        if (isPlaying) {\n          await sound.pauseAsync();\n        } else {\n          await sound.playAsync();\n        }\n        setIsPlaying(!isPlaying);\n      } else {\n        const { sound: newSound } = await Audio.Sound.createAsync(\n          { uri: previewUrl },\n          { shouldPlay: true }\n        );\n        setSound(newSound);\n        setIsPlaying(true);\n\n        newSound.setOnPlaybackStatusUpdate(async (status) => {\n          if (status.didJustFinish) {\n            setIsPlaying(false);\n            await newSound.unloadAsync();\n            setSound(null);\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error playing preview:', error);\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      if (sound) {\n        sound.unloadAsync();\n      }\n    };\n  }, [sound]);\n\n  const handleLink = (url?: string) => {\n    if (url) {\n      Linking.openURL(url);\n    }\n  };\n\n  if (isLatestRelease) {\n    return (\n      <TouchableOpacity style={styles.latestContainer}>\n        <View style={styles.latestImageContainer}>\n          <Image\n            source={{ uri: artwork }}\n            style={styles.latestArtwork}\n          />\n          <View style={[styles.latestBadge, { backgroundColor: labelColors[label] }]}>\n            <Text style={styles.latestBadgeText}>Latest Release</Text>\n          </View>\n        </View>\n\n        <View style={styles.latestInfoContainer}>\n          <View style={styles.latestHeaderContainer}>\n            <View style={styles.latestTitleContainer}>\n              <Text style={styles.latestTitle}>{title}</Text>\n              <Text style={styles.latestArtist}>{artist}</Text>\n              <Text style={styles.latestDetails}>{genre} • {formattedDate}</Text>\n            </View>\n            <View style={styles.latestButtonsContainer}>\n              {beatportLink && (\n                <TouchableOpacity\n                  style={[styles.latestButton, { backgroundColor: labelColors[label] }]}\n                  onPress={() => handleLink(beatportLink)}\n                >\n                  <Text style={styles.latestButtonText}>BP</Text>\n                </TouchableOpacity>\n              )}\n              {spotifyLink && (\n                <TouchableOpacity\n                  style={[styles.latestButton, { backgroundColor: '#1DB954' }]}\n                  onPress={() => handleLink(spotifyLink)}\n                >\n                  <Text style={styles.latestButtonText}>SP</Text>\n                </TouchableOpacity>\n              )}\n              {soundcloudLink && (\n                <TouchableOpacity\n                  style={[styles.latestButton, { backgroundColor: '#ff5500' }]}\n                  onPress={() => handleLink(soundcloudLink)}\n                >\n                  <Text style={styles.latestButtonText}>SC</Text>\n                </TouchableOpacity>\n              )}\n              {previewUrl && (\n                <TouchableOpacity\n                  style={[styles.latestButton, { backgroundColor: isPlaying ? '#1DB954' : '#666666' }]}\n                  onPress={handlePlayPause}\n                >\n                  <Text style={styles.latestButtonText}>{isPlaying ? '■' : '▶'}</Text>\n                </TouchableOpacity>\n              )}\n            </View>\n          </View>\n\n          <View style={styles.tracksContainer}>\n            {tracks.slice(0, 3).map((track) => (\n              <Text key={track.id} style={styles.trackInfo}>\n                {track.title} ({track.duration})\n              </Text>\n            ))}\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n\n  return (\n    <TouchableOpacity style={styles.priorContainer}>\n      <Image\n        source={{ uri: artwork }}\n        style={styles.priorArtwork}\n      />\n      <View style={styles.priorInfoContainer}>\n        <View style={styles.priorTextContainer}>\n          <Text style={styles.priorTitle}>{title}</Text>\n          <Text style={styles.priorArtist}>{artist}</Text>\n          <Text style={styles.priorDetails}>{formattedDate} • {genre}</Text>\n        </View>\n        <View style={styles.priorButtonsContainer}>\n          {beatportLink && (\n            <TouchableOpacity\n              style={[styles.priorButton, { backgroundColor: labelColors[label] }]}\n              onPress={() => handleLink(beatportLink)}\n            >\n              <Text style={styles.priorButtonText}>BP</Text>\n            </TouchableOpacity>\n          )}\n          {spotifyLink && (\n            <TouchableOpacity\n              style={[styles.priorButton, { backgroundColor: '#1DB954' }]}\n              onPress={() => handleLink(spotifyLink)}\n            >\n              <Text style={styles.priorButtonText}>SP</Text>\n            </TouchableOpacity>\n          )}\n          {soundcloudLink && (\n            <TouchableOpacity\n              style={[styles.priorButton, { backgroundColor: '#ff5500' }]}\n              onPress={() => handleLink(soundcloudLink)}\n            >\n              <Text style={styles.priorButtonText}>SC</Text>\n            </TouchableOpacity>\n          )}\n          {previewUrl && (\n            <TouchableOpacity\n              style={[styles.priorButton, { backgroundColor: isPlaying ? '#1DB954' : '#666666' }]}\n              onPress={handlePlayPause}\n            >\n              <Text style={styles.priorButtonText}>{isPlaying ? '■' : '▶'}</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  // Latest Release Styles\n  latestContainer: {\n    backgroundColor: '#1E1E1E',\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  latestImageContainer: {\n    position: 'relative',\n    width: '100%',\n    aspectRatio: 1,\n  },\n  latestArtwork: {\n    width: '100%',\n    height: '100%',\n  },\n  latestBadge: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 4,\n  },\n  latestBadgeText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  latestInfoContainer: {\n    padding: 15,\n  },\n  latestHeaderContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n  },\n  latestTitleContainer: {\n    flex: 1,\n    marginRight: 10,\n  },\n  latestTitle: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  latestArtist: {\n    color: '#BBBBBB',\n    fontSize: 14,\n    marginBottom: 4,\n  },\n  latestDetails: {\n    color: '#888888',\n    fontSize: 12,\n  },\n  latestButtonsContainer: {\n    flexDirection: 'row',\n    gap: 6,\n  },\n  latestButton: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  latestButtonText: {\n    color: '#FFFFFF',\n    fontSize: 11,\n    fontWeight: 'bold',\n  },\n  tracksContainer: {\n    marginTop: 15,\n  },\n  trackInfo: {\n    color: '#BBBBBB',\n    fontSize: 12,\n    marginBottom: 2,\n  },\n\n  // Prior Release Styles\n  priorContainer: {\n    backgroundColor: '#1E1E1E',\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginBottom: 10,\n    flexDirection: 'row',\n    height: 80,\n  },\n  priorArtwork: {\n    width: 80,\n    height: 80,\n  },\n  priorInfoContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 10,\n  },\n  priorTextContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  priorTitle: {\n    color: '#FFFFFF',\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 2,\n  },\n  priorArtist: {\n    color: '#BBBBBB',\n    fontSize: 12,\n    marginBottom: 2,\n  },\n  priorDetails: {\n    color: '#888888',\n    fontSize: 11,\n  },\n  priorButtonsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n    marginLeft: 10,\n  },\n  priorButton: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  priorButtonText: {\n    color: '#FFFFFF',\n    fontSize: 11,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ReleaseCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}